/*
 * 기존의 소수를 판별하는 방법으로 풀면, 시간초과 에러가 납니다.
 * 소수를 빠르게 판별할 수 있는, 에라스토테네스의 체를 이용하여 소수리스트를 미리 구해놓고,
 * 주어진 최소값과 최대값에 따라 소수를 출력해야 합니다!
 * 에라스토테네스의 체 2부터 소수를 구하고자 하는 구간의 모든 수를 나열한 다음, 소수로 밝혀진 숫자들의 배수를 지워나가며 하나씩 판별하는 방법
 * 1은 제외 =>2의 배수 지우기 =>3의 배수 지우기 =>4의 배수는 2의 배수에서 지워졌다 =>5의 배수 지우기
 */
#include<iostream>
#include<cmath>
using namespace std;

int main(void)
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	int Max, Min;
	cin >> Min >> Max;
	int* arr = new int[Max+1];

	for (int i = 0; i < Max+1; i++)
	{
		if (i < Min)
			arr[i] = 0;
		else
			arr[i] = i;
	}


	for (int i = 2; i <= sqrt(Max); i++)
		for (int j = i * 2; j <= Max; j += i)
			arr[j] = 0;


	for (int i = 0; i < Max+1; i++)
	{
		if(arr[i]==1)
			arr[i] = 0;

		if (arr[i] != 0)
			cout << arr[i] << "\n";
	}
	delete[]arr;

	return 0;
}
